{"version":3,"sources":["constants.ts","models/StopWatch.ts","models/RemainTime.ts","models/MenuEntry.ts","models/TimerEntry.ts","models/TimerMenu.tsx","components/GameTimer.tsx","containers/GameTimer.ts","actions.ts","models/DataStore.tsx","App.tsx","reducers.ts","index.tsx"],"names":["UPDATE_MODEL","WatchState","RemainTime","milliSeconds","Object","classCallCheck","this","createClass","key","value","seconds","printf","Math","floor","ceil","toString","hour","min","sec","concat","diff","get","StopWatch","title","checkPoints","onTick","arguments","length","undefined","onFinish","remainTime1","timeoutIds","state","BEFORE_START","startedAt","_this","RUNNING","FINISHED","synthes","SpeechSynthesisUtterance","lang","speechSynthesis","speak","Date","push","window","setTimeout","tick_","SUSPEND","remainTime","forEach","id","clearTimeout","calc","now","getTime","format","_this2","finished","defaultMenuEntry","name","timers","List","MenuEntry","_Record","possibleConstructorReturn","getPrototypeOf","apply","inherits","Record","TimerEntry","duration","defaultTimerMenu","menuEntries","of","Range","map","i","TimerMenu","menuIndex","onMenuSelect","selectItems","e","n","react_default","a","createElement","index_es","onChange","GameTimer","_Component","_getPrototypeOf2","_len","args","Array","_key","call","noSleep","NoSleep","timerMenu","sw","onPlayClick","enable","canRun","go","props","updateStore","dataStore","merge","label","running","pause","onResetClick","ev","parseInt","target","selectMenu","timerList","timeDisplay","controlButtons","toLeftString","rate","shift","set","remainTimeString","disable","timerIndex","finish","createStopWatch","isTimerLeft","store","nextTimer","Component","connect","dispatch","type","updateModel","DataStore","getTimer","filter","getDuration","reverse","toArray","size","button","disabled","className","data-is-current","aria-label","icons_index_es","data-is-finish","time","playButton","variant","onClick","color","getTitle","getCheckPoints","createStore","action","theme","createMuiTheme","typography","useNextVariants","App","styles","es","containers_GameTimer","ReactDOM","react","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.d945de28.chunk.js","sourcesContent":["// constants\n\nexport const UPDATE_MODEL = \"UPDATE_MODEL\";\nexport type UPDATE_MODEL = typeof UPDATE_MODEL;\n","import { RemainTime } from \"./RemainTime\";\n\nenum WatchState {\n    BEFORE_START, RUNNING, SUSPEND, FINISHED,\n}\n\nexport class StopWatch {\n    public remainTime1: RemainTime;\n    public timeoutIds: number[] = [];\n    public state: WatchState = WatchState.BEFORE_START;\n    public startedAt?: Date = undefined;\n\n    constructor(public title: string,\n                seconds: number,\n                public checkPoints: number[],\n                public onTick: (sw: StopWatch) => void = () => {\n                    return;\n                },\n                public onFinish: (sw: StopWatch) => void = () => {\n                    return;\n                }) {\n        this.remainTime1 = new RemainTime(seconds * 1000);\n    }\n\n    public go() {\n        if (this.state === WatchState.RUNNING || this.state === WatchState.FINISHED) {\n            return;\n        }\n        if (this.state === WatchState.BEFORE_START) {\n            const synthes = new SpeechSynthesisUtterance(`${this.title}です`);\n            synthes.lang = \"ja-JP\";\n            speechSynthesis.speak(synthes);\n        }\n        this.startedAt = new Date();\n        this.timeoutIds.push(window.setTimeout(() => this.tick_(), 100));\n        this.state = WatchState.RUNNING;\n    }\n\n    public pause() {\n        if (this.state === WatchState.SUSPEND || this.state === WatchState.FINISHED) {\n            return;\n        }\n        this.remainTime1 = this.remainTime();\n        this.startedAt = undefined;\n        this.timeoutIds.forEach((id) => clearTimeout(id));\n        this.state = WatchState.SUSPEND;\n    }\n\n    public remainTime(): RemainTime {\n        return this.remainTime1.calc(this.startedAt ? Date.now() - this.startedAt.getTime() : 0);\n    }\n\n    public remainTimeString(): string {\n        return this.remainTime().format();\n    }\n\n    public tick_() {\n        this.timeoutIds.push(window.setTimeout(\n            () => {\n                this.onTick(this);\n                if (this.remainTime().finished) {\n                    this.state = WatchState.FINISHED;\n                    this.onFinish(this);\n                } else {\n                    this.tick_();\n                }\n            },\n            90));\n    }\n\n    public canRun() {\n        return this.state === WatchState.BEFORE_START || this.state === WatchState.SUSPEND;\n    }\n}\n","import printf from \"printf\";\n\nexport class RemainTime {\n\n    constructor(private milliSeconds: number) {\n\n    }\n\n    get seconds() {\n        return this.milliSeconds / 1000;\n    }\n\n    get finished() {\n        return this.milliSeconds < 0;\n    }\n\n    public format(): string {\n        if (this.milliSeconds <= 0) {\n            return \"00:00:00\";\n        }\n        const seconds = this.milliSeconds / 1000;\n        return printf(\"%02d:%02d:%02d\",\n            Math.floor(seconds / 3600),\n            Math.floor((seconds % 3600) / 60),\n            Math.floor(seconds % 60));\n    }\n\n    public toLeftString(): string {\n        const seconds = Math.ceil(this.milliSeconds / 1000);\n        if (seconds < 10) {\n            return seconds.toString();\n        } else {\n            const hour = Math.floor(seconds / 3600);\n            const min = Math.floor((seconds % 3600) / 60);\n            const sec = Math.floor(seconds % 60);\n            return `残り${(hour > 0 ? hour + \"時間\" : \"\")}\n        ${(min > 0 ? min + \"分\" : \"\")}\n        ${(sec > 0 ? sec + \"秒\" : \"\")}\n        です`;\n        }\n    }\n\n    public calc(diff: number) {\n        return new RemainTime(this.milliSeconds - diff);\n    }\n}\n","import { List, Record } from \"immutable\";\nimport { TimerEntry } from \"./TimerEntry\";\n\ninterface IMenuEntry {\n    name: string;\n    timers: List<TimerEntry>;\n}\n\nconst defaultMenuEntry: IMenuEntry = {\n    name: \"\",\n    timers: List(),\n};\n\nexport class MenuEntry extends Record(defaultMenuEntry) implements IMenuEntry {}\n","import { Record } from \"immutable\";\n\ninterface ITimerEntry {\n    title: string;\n    duration: number;\n}\n\nconst defaultTimerEntry: ITimerEntry = {\n    title: \"\",\n    duration: 0,\n};\n\nexport class TimerEntry extends Record(defaultTimerEntry) implements  ITimerEntry {}\n","import { MenuItem, Select } from \"@material-ui/core\";\nimport { List, Range, Record } from \"immutable\";\nimport printf from \"printf\";\nimport React from \"react\";\nimport { MenuEntry } from \"./MenuEntry\";\nimport { TimerEntry } from \"./TimerEntry\";\n\ninterface ITimerMenu {\n    menuEntries: List<MenuEntry>;\n}\n\nconst defaultTimerMenu: ITimerMenu = {\n    menuEntries: List.of(\n        new MenuEntry({\n            name: \"ディプロマシー\",\n            timers: List.of(\n                new TimerEntry({title: \"外交フェイズ\", duration: 15 * 60}),\n                new TimerEntry({title: \"命令記述フェイズ\", duration: 5 * 60}),\n                new TimerEntry({title: \"命令解決フェイズ\", duration: 10 * 60}),\n            ),\n        }),\n        new MenuEntry({\n            name: \"テスト\",\n            timers: List.of(\n                new TimerEntry({title: \"A\", duration: 5}),\n                new TimerEntry({title: \"B\", duration: 4}),\n                new TimerEntry({title: \"C\", duration: 3}),\n            ),\n        }),\n        new MenuEntry({\n            name: \"テスト2\",\n            timers: List.of(\n                new TimerEntry({title: \"A\", duration: 1})),\n        })).concat(\n        Range(1, 16).map((i: number) => new MenuEntry({\n            name: printf(\"%d分\", i),\n            timers: List.of(new TimerEntry({\n                title: printf(\"%d分\", i),\n                duration: i * 60,\n            })),\n        }))),\n};\n\nexport class TimerMenu extends Record(defaultTimerMenu) implements ITimerMenu {\n\n    public selectMenu(menuIndex: number, onMenuSelect: (ev: React.ChangeEvent<HTMLSelectElement>) => void) {\n        const selectItems = this.menuEntries.map((e: MenuEntry) => e.name).map((n, i) => (\n            <MenuItem value={i} key={n}>{n}</MenuItem>));\n        return (\n            <Select value={menuIndex} onChange={onMenuSelect}>\n                {selectItems}\n            </Select>);\n    }\n}\n","import { Divider, List } from \"@material-ui/core\";\nimport { Pause } from \"@material-ui/icons\";\n// @ts-ignore\nimport NoSleep from \"nosleep.js\";\nimport React, { Component } from \"react\";\nimport { StopWatch } from \"../models/StopWatch\";\nimport { TimerMenu } from \"../models/TimerMenu\";\nimport { IGameTimerProps } from \"../types\";\n\nexport class GameTimer extends Component<IGameTimerProps> {\n\n    public noSleep: NoSleep = new NoSleep();\n    public timerMenu: TimerMenu = new TimerMenu();\n    private sw: StopWatch = new StopWatch(\"dummy\", 0, []);\n\n    public componentDidMount() {\n        this.onChange(this.props.dataStore!.menuIndex);\n    }\n\n    public render() {\n        return (\n            <div>\n                {this.timerMenu.selectMenu(this.props.dataStore.menuIndex, this.onMenuSelect)}\n                <List>\n                    {this.props.dataStore.timerList(this.timerMenu)}\n                    <Divider/>\n                    {this.props.dataStore.timeDisplay()}\n                    {this.props.dataStore.controlButtons(this.onPlayClick, this.onResetClick)}\n                </List>\n            </div>\n        );\n    }\n\n    private onChange(menuIndex: number) {\n        const onTick = (sw: StopWatch) => {\n            if (sw.remainTime().seconds < sw.checkPoints[0]) {\n                const synthes = new SpeechSynthesisUtterance(sw.remainTime().toLeftString());\n                synthes.lang = \"ja-JP\";\n                synthes.rate = 1.2;\n                speechSynthesis.speak(synthes);\n                sw.checkPoints.shift();\n            }\n            this.props.updateStore(this.props.dataStore.set(\"time\", sw.remainTimeString()));\n        };\n        const onFinish = (sw: StopWatch) => {\n            if (this.props.dataStore.isTimerLeft(this.timerMenu)) {\n                const store = this.props.dataStore.nextTimer();\n                this.sw = store.createStopWatch(this.timerMenu, onTick, onFinish);\n                this.props.updateStore(store);\n                this.sw.go();\n            } else {\n                const synthes = new SpeechSynthesisUtterance(\"終了です。\");\n                synthes.lang = \"ja-JP\";\n                speechSynthesis.speak(synthes);\n                this.props.updateStore(this.props.dataStore.set(\"finish\", true));\n            }\n        };\n        this.sw.pause();\n        this.noSleep.disable();\n        const dataStore = this.props.dataStore.merge({\n            menuIndex,\n            timerIndex: 0,\n            finish: false,\n            label: \"Go\",\n            running: false,\n        });\n        this.sw = dataStore.createStopWatch(this.timerMenu, onTick, onFinish);\n        this.props.updateStore(dataStore.set(\"time\", this.sw.remainTimeString()));\n    }\n\n    private onPlayClick = () => {\n        this.noSleep.enable();\n        if (this.sw.canRun()) {\n            this.sw.go();\n            this.props.updateStore(this.props.dataStore.merge({label: \"Pause\", running: true}));\n        } else {\n            this.sw.pause();\n            this.props.updateStore(this.props.dataStore.merge({label: \"Go\", running: false}));\n        }\n    }\n\n    private onResetClick = () => {\n        this.onChange(this.props.dataStore.menuIndex);\n    }\n\n    private onMenuSelect = (ev: React.ChangeEvent<HTMLSelectElement>) => {\n        this.onChange(parseInt(ev.target.value, 10));\n    }\n}\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { ModelAction, updateModel } from \"../actions\";\nimport { GameTimer } from \"../components/GameTimer\";\nimport { DataStore } from \"../models/DataStore\";\n\nexport function mapStateToProps(state: DataStore) {\n    return {dataStore: state};\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<ModelAction>) {\n    return {\n        updateStore: (dataStore: DataStore) => dispatch(updateModel(dataStore)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameTimer);\n","import { UPDATE_MODEL } from \"./constants\";\nimport { DataStore } from \"./models/DataStore\";\n\ninterface IUpdateModel {\n    type: UPDATE_MODEL;\n    dataStore: DataStore;\n}\n\nexport type ModelAction = IUpdateModel;\n\nexport function updateModel(dataStore: DataStore): IUpdateModel {\n    return {\n        type: UPDATE_MODEL,\n        dataStore,\n    };\n}\n","import { Button, IconButton, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\nimport { Pause, PlayArrow, Timer, TimerOff } from \"@material-ui/icons\";\nimport { List, Range, Record } from \"immutable\";\nimport printf from \"printf\";\nimport React from \"react\";\nimport { StopWatch } from \"./StopWatch\";\nimport { TimerEntry } from \"./TimerEntry\";\nimport { TimerMenu } from \"./TimerMenu\";\n\ninterface IDataStore {\n    menuIndex: number;\n    timerIndex: number;\n    time: string;\n    label: string;\n    running: boolean;\n    finish: boolean;\n}\n\nconst defaultDataStore: IDataStore = {\n    menuIndex: 0,\n    timerIndex: 0,\n    time: \"\",\n    label: \"Go\",\n    running: false,\n    finish: false,\n};\n\nexport class DataStore extends Record(defaultDataStore) implements IDataStore {\n\n    public getTimer(timerMenu: TimerMenu) {\n        return timerMenu.menuEntries.get(this.menuIndex)!.timers.get(this.timerIndex)!;\n    }\n\n    public getTitle(timerMenu: TimerMenu) {\n        return this.getTimer(timerMenu).get(\"title\");\n    }\n\n    public getDuration(timerMenu: TimerMenu) {\n        return this.getTimer(timerMenu).get(\"duration\");\n    }\n\n    public getCheckPoints(timerMenu: TimerMenu): number[] {\n        return Range(1, 6).concat(Range(10, 60, 10)).concat(Range(60, 15 * 60, 60))\n            .filter((e: number) => e < this.getDuration(timerMenu))\n            .reverse().toArray();\n    }\n\n    public isTimerLeft(timerMenu: TimerMenu) {\n        return this.timerIndex + 1 < timerMenu.menuEntries.get(this.menuIndex)!.timers.size;\n    }\n\n    public nextTimer() {\n        return this.set(\"timerIndex\", this.timerIndex + 1);\n    }\n\n    public timerList(timerMenu: TimerMenu) {\n        return timerMenu.menuEntries.get(this.menuIndex)!.timers.map((e: TimerEntry, i) => (\n            <ListItem\n                button={true}\n                disabled={true}\n                className=\"timer-list\"\n                data-is-current={i === this.timerIndex}\n                key={i}\n            >\n                <ListItemText>\n                    {printf(\"%s %d:%02d\", e.title, Math.floor(e.duration / 60), e.duration % 60)}\n                </ListItemText>\n                <ListItemSecondaryAction>\n                    <IconButton aria-label=\"Delete\">\n                        {i === this.timerIndex ? <Timer/> : <TimerOff/>}\n                    </IconButton>\n                </ListItemSecondaryAction>\n            </ListItem>\n        ));\n    }\n\n    public timeDisplay() {\n        return (\n            <div className=\"time-display\" data-is-finish={this.finish}>\n                <code>\n                    {this.time}\n                </code>\n            </div>\n        );\n    }\n\n    public controlButtons(onPlayClick: () => void, onResetClick: () => void) {\n        const playButton = this.finish ? \"\" : (\n            <Button\n                variant=\"contained\"\n                className=\"button\"\n                onClick={onPlayClick}\n            >\n                {this.running ? <Pause/> : <PlayArrow/>}\n                {this.label}\n            </Button>\n        );\n        return (\n            <div className=\"control-buttons\">\n                {playButton}\n                <Button\n                    variant=\"contained\"\n                    className=\"button\"\n                    color=\"secondary\"\n                    onClick={onResetClick}\n                >\n                    Reset\n                </Button>\n            </div>);\n    }\n\n    public createStopWatch(timerMenu: TimerMenu,\n                           onTick: (sw: StopWatch) => void,\n                           onFinish: (sw: StopWatch) => void): StopWatch {\n        return new StopWatch(this.getTitle(timerMenu),\n            this.getDuration(timerMenu),\n            this.getCheckPoints(timerMenu),\n            onTick,\n            onFinish);\n    }\n\n}\n","import { createMuiTheme, MuiThemeProvider } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport \"./App.css\";\nimport GameTimer from \"./containers/GameTimer\";\nimport { DataStore } from \"./models/DataStore\";\nimport { modelReducer } from \"./reducers\";\n\n// @ts-ignore\nconst store = createStore<DataStore>(modelReducer, new DataStore());\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n});\n\nexport default class App extends Component {\n    public render() {\n        return (\n            <MuiThemeProvider theme={theme}>\n                <Provider store={store}>\n                    <GameTimer/>\n                </Provider>\n            </MuiThemeProvider>);\n    }\n}\n","import { ModelAction } from \"./actions\";\nimport { UPDATE_MODEL } from \"./constants\";\nimport { DataStore } from \"./models/DataStore\";\n\nexport function modelReducer(state: DataStore, action: ModelAction): DataStore {\n    switch (action.type) {\n        case UPDATE_MODEL:\n            return action.dataStore;\n        default:\n            return state;\n    }\n}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}