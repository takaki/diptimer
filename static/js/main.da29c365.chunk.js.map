{"version":3,"sources":["models/StopWatch.ts","models/RemainTime.ts","models/TimerEntry.ts","models/TimerMenu.ts","models/DataStore.ts","components/GameTimer.tsx","containers/GameTimerApp.ts","actions.ts","constants.ts","App.tsx","reducers.ts","index.tsx"],"names":["WatchState","milliSeconds","Lens","fromProp","seconds","r","remainTime","diff","modify","i","printf","Math","floor","left","ceil","toString","hour","min","sec","concat","StopWatch","timerEntry","onTick","arguments","length","undefined","onFinish","Object","classCallCheck","this","checkPoints","remainTime1","timeoutIds","state","BEFORE_START","startedAt","duration","getCheckPoints","createClass","key","value","_this","RUNNING","FINISHED","synthes","SpeechSynthesisUtterance","title","lang","speechSynthesis","speak","Date","push","window","setTimeout","tick_","SUSPEND","forEach","id","clearTimeout","now","getTime","_this2","shift","limit","reverse","array","filter","reduce","range","map","e","defaultTimerEntry","defaultTimerMenu","menuEntries","name","timers","timerIndex","defaultDataStore","menuIndex","timerMenu","TM","time","label","running","finish","sw","createStopWatch","self","lookup","chain","a","getOrElse","GameTimer","_React$Component","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","noSleep","nosleepJs","onPlayClick","enable","props","dataStore","canRun","go","execPause","pause","execGo","onResetClick","onChange","onMenuSelect","ev","parseInt","target","inherits","react","selectMenu","List","timerListItem","Divider","timeDisplay","controlButtons","firstCheckPoint","rate","shiftCheckPoints","setRemainTime","disable","setMenuIndex","newStopWatch","setNextTimer","setFinish","React","ListItem","button","disabled","className","data-is-current","ListItemText","ListItemSecondaryAction","IconButton","aria-label","Timer","TimerOff","empty","Button","variant","onClick","Pause","PlayArrow","color","data-is-finish","Select","n","MenuItem","GameTimerApp","connect","dispatch","s","type","payload","f","g","setStopWatch","stopWatch","store","createStore","action","objectSpread","theme","createMuiTheme","App","MuiThemeProvider","es","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.da29c365.chunk.js","sourcesContent":["import { array, range, reverse } from \"fp-ts/lib/Array\";\nimport { concat } from \"fp-ts/lib/function\";\nimport { IRemainTime, remainTime } from \"./RemainTime\";\nimport { ITimerEntry } from \"./TimerEntry\";\n\nenum WatchState {\n  BEFORE_START,\n  RUNNING,\n  SUSPEND,\n  FINISHED\n}\n\nexport class StopWatch {\n  private checkPoints: number[];\n  private remainTime1: IRemainTime;\n  private timeoutIds: number[] = [];\n  private state: WatchState = WatchState.BEFORE_START;\n  private startedAt?: Date = undefined;\n\n  constructor(\n    private timerEntry: ITimerEntry,\n    private onTick: (sw: StopWatch) => void = () => {\n      return;\n    },\n    private onFinish: (sw: StopWatch) => void = () => {\n      return;\n    }\n  ) {\n    this.remainTime1 = { milliSeconds: timerEntry.duration * 1000 };\n    this.checkPoints = getCheckPoints(timerEntry.duration);\n  }\n\n  public go() {\n    switch (this.state) {\n      case WatchState.RUNNING:\n      case WatchState.FINISHED:\n        return;\n      case WatchState.BEFORE_START:\n        const synthes = new SpeechSynthesisUtterance(\n          `${this.timerEntry.title}です`\n        );\n        synthes.lang = \"ja-JP\";\n        speechSynthesis.speak(synthes);\n        break;\n      default:\n        break;\n    }\n    this.startedAt = new Date();\n    this.timeoutIds.push(window.setTimeout(() => this.tick_(), 100));\n    this.state = WatchState.RUNNING;\n  }\n\n  public pause() {\n    switch (this.state) {\n      case WatchState.SUSPEND:\n      case WatchState.FINISHED:\n        return;\n    }\n    this.remainTime1 = this.remainTime();\n    this.startedAt = undefined;\n    this.timeoutIds.forEach(id => clearTimeout(id));\n    this.state = WatchState.SUSPEND;\n  }\n\n  public remainTime(): IRemainTime {\n    return remainTime.calc(\n      this.startedAt ? Date.now() - this.startedAt.getTime() : 0,\n      this.remainTime1\n    );\n  }\n  public tick_() {\n    this.timeoutIds.push(\n      window.setTimeout(() => {\n        this.onTick(this);\n        if (remainTime.finished(this.remainTime())) {\n          this.state = WatchState.FINISHED;\n          this.onFinish(this);\n        } else {\n          this.tick_();\n        }\n      }, 90)\n    );\n  }\n\n  public canRun() {\n    return (\n      this.state === WatchState.BEFORE_START ||\n      this.state === WatchState.SUSPEND\n    );\n  }\n\n  public shiftCheckPoints() {\n    this.checkPoints.shift();\n  }\n\n  public firstCheckPoint() {\n    return this.checkPoints[0];\n  }\n}\n\nconst getCheckPoints = (limit: number): number[] => {\n  return reverse(\n    array.filter(\n      array.reduce(\n        [\n          range(1, 5),\n          range(1, 5).map(i => i * 10),\n          range(1, 15).map(i => i * 60)\n        ],\n        [] as number[],\n        concat\n      ),\n      e => e < limit\n    )\n  );\n};\n","import { Lens } from \"monocle-ts\";\nimport printf from \"printf\";\n\nexport interface IRemainTime {\n  milliSeconds: number;\n}\n\nconst milliSeconds = Lens.fromProp<IRemainTime>()(\"milliSeconds\");\n\nconst seconds = (r: IRemainTime): number => r.milliSeconds / 1000;\nconst finished = (r: IRemainTime): boolean => r.milliSeconds < 0;\nconst format = (r: IRemainTime): string =>\n  r.milliSeconds <= 0\n    ? \"00:00:00\"\n    : printf(\n        \"%02d:%02d:%02d\",\n        Math.floor(seconds(r) / 3600),\n        Math.floor((seconds(r) % 3600) / 60),\n        Math.floor(seconds(r) % 60)\n      );\n\nconst toLeftString = (r: IRemainTime): string => {\n  const left = Math.ceil(r.milliSeconds / 1000);\n  if (left < 10) {\n    return left.toString();\n  }\n\n  const hour = Math.floor(left / 3600);\n  const min = Math.floor((left % 3600) / 60);\n  const sec = Math.floor(left % 60);\n  return `残り${hour > 0 ? `{hour}時間` : \"\"}\n        ${min > 0 ? `${min}分` : \"\"}\n        ${sec > 0 ? `${sec}秒` : \"\"}\n        です`;\n};\n\nconst calc = (diff: number, r: IRemainTime) => {\n  return milliSeconds.modify(i => i - diff)(r);\n};\n\nexport const remainTime = {\n  calc,\n  format,\n  finished,\n  seconds,\n  toLeftString\n};\n","export interface ITimerEntry {\n  title: string;\n  duration: number;\n}\n\nexport const defaultTimerEntry: ITimerEntry = {\n  title: \"\",\n  duration: 0\n};\n","import { lookup, range } from \"fp-ts/lib/Array\";\nimport { concat } from \"fp-ts/lib/function\";\nimport { IMenuEntry } from \"./MenuEntry\";\nimport { defaultTimerEntry, ITimerEntry } from \"./TimerEntry\";\n\nexport interface ITimerMenu {\n  menuEntries: IMenuEntry[];\n}\n\nexport const defaultTimerMenu: ITimerMenu = {\n  menuEntries: concat(\n    [\n      {\n        name: \"ディプロマシー\",\n        timers: [\n          { title: \"外交フェイズ\", duration: 15 * 60 },\n          { title: \"命令記述フェイズ\", duration: 5 * 60 },\n          { title: \"命令解決フェイズ\", duration: 10 * 60 }\n        ]\n      },\n      {\n        name: \"テスト\",\n        timers: [\n          { title: \"A\", duration: 5 },\n          { title: \"B\", duration: 4 },\n          { title: \"C\", duration: 3 }\n        ]\n      },\n      {\n        name: \"テスト2\",\n        timers: [{ title: \"A\", duration: 1 }]\n      }\n    ],\n    range(1, 15).map((i: number) => ({\n      name: `${i}分`,\n      timers: [{ title: `${i}分`, duration: i * 60 }]\n    }))\n  )\n};\n\nexport const getTimerEntry = (\n  menuIndex: number,\n  timerIndex: number,\n  self: ITimerMenu\n): ITimerEntry =>\n  lookup(menuIndex, self.menuEntries)\n    .chain(a => lookup(timerIndex, a.timers))\n    .getOrElse(defaultTimerEntry);\n","import { lookup } from \"fp-ts/lib/Array\";\nimport { Option } from \"fp-ts/lib/Option\";\nimport { Lens } from \"monocle-ts\";\nimport { IMenuEntry } from \"./MenuEntry\";\nimport { StopWatch } from \"./StopWatch\";\nimport * as TM from \"./TimerMenu\";\nimport { defaultTimerEntry } from \"./TimerEntry\";\n\nexport interface IDataStore {\n  menuIndex: number;\n  timerIndex: number;\n  timerMenu: TM.ITimerMenu;\n  time: string;\n  label: string;\n  running: boolean;\n  finish: boolean;\n  sw: StopWatch;\n}\n\nconst timerIndex = Lens.fromProp<IDataStore>()(\"timerIndex\");\n\nexport const defaultDataStore: IDataStore = {\n  menuIndex: 0,\n  timerIndex: 0,\n  timerMenu: TM.defaultTimerMenu,\n  time: \"\",\n  label: \"Go\",\n  running: false,\n  finish: false,\n  sw: new StopWatch(defaultTimerEntry)\n};\n\nexport const isTimerLeft = (self: IDataStore): boolean =>\n  lookup(self.menuIndex, self.timerMenu.menuEntries)\n    .map(a => self.timerIndex + 1 < a.timers.length)\n    .getOrElse(false);\n\nexport const nextTimer = (self: IDataStore): IDataStore =>\n  timerIndex.modify(a => a + 1)(self);\n\nexport const timerList = (self: IDataStore): Option<IMenuEntry> =>\n  lookup(self.menuIndex, self.timerMenu.menuEntries);\n\nexport const createStopWatch = (\n  onTick: (sw: StopWatch) => void,\n  onFinish: (sw: StopWatch) => void,\n  self: IDataStore\n): StopWatch =>\n  new StopWatch(\n    TM.getTimerEntry(self.menuIndex, self.timerIndex, self.timerMenu),\n    onTick,\n    onFinish\n  );\n","import {\n  Button,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  MenuItem,\n  Select\n} from \"@material-ui/core\";\nimport { Pause, PlayArrow, Timer, TimerOff } from \"@material-ui/icons\";\nimport { empty } from \"fp-ts/lib/Array\";\n// @ts-ignore\n// noinspection TypeScriptCheckImport,TypeScriptCheckImport\nimport nosleepJs from \"nosleep.js\";\nimport printf from \"printf\";\nimport * as React from \"react\";\nimport { IDataStore, isTimerLeft, timerList } from \"../models/DataStore\";\nimport { IMenuEntry } from \"../models/MenuEntry\";\nimport { remainTime } from \"../models/RemainTime\";\nimport { StopWatch } from \"../models/StopWatch\";\nimport { ITimerEntry } from \"../models/TimerEntry\";\nimport { IGameTimerProps } from \"../types\";\n\nexport class GameTimer extends React.Component<IGameTimerProps> {\n  private noSleep = new nosleepJs();\n\n  public componentDidMount() {\n    this.onChange(this.props.dataStore.menuIndex);\n  }\n\n  public render() {\n    // React.useLayoutEffect()\n    return (\n      <div>\n        {selectMenu(this.onMenuSelect, this.props.dataStore)}\n        <List>\n          {timerListItem(this.props.dataStore)}\n          <Divider />\n          {timeDisplay(this.props.dataStore)}\n          {controlButtons(\n            this.onPlayClick,\n            this.onResetClick,\n            this.props.dataStore\n          )}\n        </List>\n      </div>\n    );\n  }\n\n  private onChange(menuIndex: number) {\n    const onTick = (sw: StopWatch) => {\n      if (remainTime.seconds(sw.remainTime()) < sw.firstCheckPoint()) {\n        const synthes = new SpeechSynthesisUtterance(\n          remainTime.toLeftString(sw.remainTime())\n        );\n        synthes.lang = \"ja-JP\";\n        synthes.rate = 1.2;\n        speechSynthesis.speak(synthes);\n        sw.shiftCheckPoints();\n      }\n      this.props.setRemainTime(remainTime.format(sw.remainTime()));\n    };\n    const onFinish = (sw: StopWatch) => {\n      if (isTimerLeft(this.props.dataStore)) {\n        this.props.setNextTimer();\n        this.props.newStopWatch(onTick, onFinish);\n        this.props.dataStore.sw.go();\n      } else {\n        const synthes = new SpeechSynthesisUtterance(\"終了です。\");\n        synthes.lang = \"ja-JP\";\n        speechSynthesis.speak(synthes);\n        this.props.setFinish();\n      }\n    };\n    this.props.dataStore.sw.pause();\n    this.noSleep.disable();\n    this.props.setMenuIndex(menuIndex);\n    this.props.newStopWatch(onTick, onFinish);\n  }\n\n  private onPlayClick = () => {\n    this.noSleep.enable();\n    if (this.props.dataStore.sw.canRun()) {\n      this.props.dataStore.sw.go();\n      this.props.execPause();\n    } else {\n      this.props.dataStore.sw.pause();\n      this.props.execGo();\n    }\n  };\n\n  private onResetClick = () => this.onChange(this.props.dataStore.menuIndex);\n\n  private onMenuSelect = (ev: React.ChangeEvent<any>) =>\n    this.onChange(parseInt(ev.target.value, 10));\n}\n\nconst timerListItem = (dataStore: IDataStore): JSX.Element[] =>\n  timerList(dataStore)\n    .map(a =>\n      a.timers.map((e: ITimerEntry, i) => (\n        <ListItem\n          button={true}\n          disabled={true}\n          className=\"timer-list\"\n          data-is-current={i === dataStore.timerIndex}\n          key={i}\n        >\n          <ListItemText>\n            {printf(\n              \"%s %d:%02d\",\n              e.title,\n              Math.floor(e.duration / 60),\n              e.duration % 60\n            )}\n          </ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton aria-label=\"Delete\">\n              {i === dataStore.timerIndex ? <Timer /> : <TimerOff />}\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))\n    )\n    .getOrElse(empty);\n\nconst controlButtons = (\n  onPlayClick: () => void,\n  onResetClick: () => void,\n  self: IDataStore\n): JSX.Element => (\n  <div className=\"control-buttons\">\n    {self.finish ? (\n      \"\"\n    ) : (\n      <Button variant=\"contained\" className=\"button\" onClick={onPlayClick}>\n        {self.running ? <Pause /> : <PlayArrow />}\n        {self.label}\n      </Button>\n    )}\n    <Button\n      variant=\"contained\"\n      className=\"button\"\n      color=\"secondary\"\n      onClick={onResetClick}\n    >\n      Reset\n    </Button>\n  </div>\n);\n\nconst timeDisplay = (self: IDataStore): JSX.Element => (\n  <div className=\"time-display\" data-is-finish={self.finish}>\n    <code>{self.time}</code>\n  </div>\n);\n\nconst selectMenu = (\n  onMenuSelect: (ev: React.ChangeEvent<any>) => void,\n  self: IDataStore\n): JSX.Element => (\n  <Select value={self.menuIndex} onChange={onMenuSelect}>\n    {self.timerMenu.menuEntries\n      .map((e: IMenuEntry) => e.name)\n      .map((n, i) => (\n        <MenuItem value={i} key={n}>\n          {n}\n        </MenuItem>\n      ))}\n  </Select>\n);\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport {\n  execGo,\n  execPause,\n  ModelAction,\n  newStopWatch,\n  setFinish,\n  setMenuIndex,\n  setNextTimer,\n  setRemainTime,\n  setStopWatch\n} from \"../actions\";\nimport { GameTimer } from \"../components/GameTimer\";\nimport { IDataStore } from \"../models/DataStore\";\nimport { StopWatch } from \"../models/StopWatch\";\n\nexport const mapStateToProps = (dataStore: IDataStore) => ({ dataStore });\n\nexport const mapDispatchToProps = (dispatch: Dispatch<ModelAction>) => ({\n  setRemainTime: (s: string) => dispatch(setRemainTime(s)),\n  execPause: () => dispatch(execPause()),\n  execGo: () => dispatch(execGo()),\n  setMenuIndex: (i: number) => dispatch(setMenuIndex(i)),\n  setFinish: () => dispatch(setFinish()),\n  setNextTimer: () => dispatch(setNextTimer()),\n  newStopWatch: (f: (i: StopWatch) => void, g: (i: StopWatch) => void) =>\n    dispatch(newStopWatch(f, g)),\n  setStopWatch: (stopWatch: StopWatch) => dispatch(setStopWatch(stopWatch))\n});\n\nexport const GameTimerApp = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GameTimer);\n","import {\n  EXEC_GO,\n  EXEC_PAUSE,\n  NEW_STOP_WATCH,\n  SET_FINISH,\n  SET_MENU_INDEX,\n  SET_NEXT_TIMER,\n  SET_REMAIN_TIME,\n  SET_STOP_WATCH\n} from \"./constants\";\nimport { StopWatch } from \"./models/StopWatch\";\n\ninterface ISetRemainTime {\n  type: SET_REMAIN_TIME;\n  payload: {\n    remainTime: string;\n  };\n}\n\ninterface IExecPause {\n  type: EXEC_PAUSE;\n}\n\ninterface IExecGo {\n  type: EXEC_GO;\n}\n\ninterface ISetMenuIndex {\n  type: SET_MENU_INDEX;\n  payload: {\n    menuIndex: number;\n  };\n}\n\ninterface ISetFinish {\n  type: SET_FINISH;\n}\n\ninterface ISetNextTimer {\n  type: SET_NEXT_TIMER;\n}\n\ninterface INewStopWatch {\n  type: NEW_STOP_WATCH;\n  payload: {\n    onTick: (sw: StopWatch) => void;\n    onFinish: (sw: StopWatch) => void;\n  };\n}\n\ninterface ISetStopWatch {\n  type: SET_STOP_WATCH;\n  payload: {\n    stopWatch: StopWatch;\n  };\n}\n\nexport type ModelAction =\n  | ISetRemainTime\n  | IExecPause\n  | IExecGo\n  | ISetMenuIndex\n  | ISetFinish\n  | ISetNextTimer\n  | INewStopWatch\n  | ISetStopWatch;\n\nexport const setRemainTime = (remainTime: string): ISetRemainTime => ({\n  type: SET_REMAIN_TIME,\n  payload: {\n    remainTime\n  }\n});\n\nexport const execPause = (): IExecPause => ({\n  type: EXEC_PAUSE\n});\n\nexport const execGo = (): IExecGo => ({\n  type: EXEC_GO\n});\n\nexport const setMenuIndex = (menuIndex: number): ISetMenuIndex => ({\n  type: SET_MENU_INDEX,\n  payload: {\n    menuIndex\n  }\n});\n\nexport const setFinish = (): ISetFinish => ({\n  type: SET_FINISH\n});\n\nexport const setNextTimer = (): ISetNextTimer => ({\n  type: SET_NEXT_TIMER\n});\n\nexport const newStopWatch = (\n  onTick: (sw: StopWatch) => void,\n  onFinish: (sw: StopWatch) => void\n): INewStopWatch => ({\n  type: NEW_STOP_WATCH,\n  payload: {\n    onTick,\n    onFinish\n  }\n});\nexport const setStopWatch = (stopWatch: StopWatch): ISetStopWatch => {\n  return {\n    type: SET_STOP_WATCH,\n    payload: {\n      stopWatch\n    }\n  };\n};\n","export const SET_REMAIN_TIME = \"SET_REMAIN_TIME\";\nexport type SET_REMAIN_TIME = typeof SET_REMAIN_TIME;\n\nexport const EXEC_PAUSE = \"EXEC_PAUSE\";\nexport type EXEC_PAUSE = typeof EXEC_PAUSE;\n\nexport const EXEC_GO = \"EXEC_GO\";\nexport type EXEC_GO = typeof EXEC_GO;\n\nexport const SET_MENU_INDEX = \"SET_MENU_INDEX\";\nexport type SET_MENU_INDEX = typeof SET_MENU_INDEX;\n\nexport const SET_FINISH = \"SET_FINISH\";\nexport type SET_FINISH = typeof SET_FINISH;\n\nexport const SET_NEXT_TIMER = \"SET_NEXT_TIMER\";\nexport type SET_NEXT_TIMER = typeof SET_NEXT_TIMER;\n\nexport const NEW_STOP_WATCH = \"NEW_STOP_WATCH\";\nexport type NEW_STOP_WATCH = typeof NEW_STOP_WATCH;\n\nexport const SET_STOP_WATCH = \"SET_STOP_WATCH\";\nexport type SET_STOP_WATCH = typeof SET_STOP_WATCH;","import { createMuiTheme } from \"@material-ui/core\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport * as React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport \"./App.css\";\nimport { GameTimerApp } from \"./containers/GameTimerApp\";\nimport { defaultDataStore, IDataStore } from \"./models/DataStore\";\nimport { modelReducer } from \"./reducers\";\n\nconst store = createStore<IDataStore, any, any, any>(\n  modelReducer,\n  defaultDataStore\n);\nconst theme = createMuiTheme({});\n\nexport default class App extends React.Component {\n  public render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}>\n          <GameTimerApp />\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n}\n","import { ModelAction } from \"./actions\";\nimport {\n  EXEC_GO,\n  EXEC_PAUSE,\n  NEW_STOP_WATCH,\n  SET_FINISH,\n  SET_MENU_INDEX,\n  SET_NEXT_TIMER,\n  SET_REMAIN_TIME,\n  SET_STOP_WATCH\n} from \"./constants\";\nimport {\n  createStopWatch,\n  defaultDataStore,\n  IDataStore,\n  nextTimer\n} from \"./models/DataStore\";\nimport { remainTime } from \"./models/RemainTime\";\n\nexport const modelReducer = (\n  state: IDataStore = defaultDataStore,\n  action: ModelAction\n): IDataStore => {\n  switch (action.type) {\n    case SET_REMAIN_TIME:\n      return { ...state, time: action.payload.remainTime };\n    case EXEC_PAUSE:\n      return { ...state, label: \"Pause\", running: true };\n    case EXEC_GO:\n      return { ...state, label: \"Go\", running: false };\n    case SET_MENU_INDEX:\n      return {\n        ...state,\n        menuIndex: action.payload.menuIndex,\n        timerIndex: 0,\n        finish: false,\n        label: \"Go\",\n        running: false\n      };\n    case SET_FINISH:\n      return { ...state, finish: true };\n    case SET_NEXT_TIMER:\n      return nextTimer(state);\n    case NEW_STOP_WATCH:\n      const sw = createStopWatch(\n        action.payload.onTick,\n        action.payload.onFinish,\n        state\n      );\n      return {\n        ...state,\n        sw,\n        time: remainTime.format(sw.remainTime())\n      };\n    case SET_STOP_WATCH:\n      return {\n        ...state,\n        sw: action.payload.stopWatch\n      };\n    default:\n      // eslint-disable-next-line\n      const _: never = action;\n      return state;\n  }\n};\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}